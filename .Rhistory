str(rawdf)
# 2- Find missing values in dataset
# NA values:
summary(rawdf)
# only the column birth.year and gender (expressed as 0) have missing values. These variables are relevant for the first part of our analysis but irrelevant to the second part.
# We'll remove the observations with missing values for the first part of our analysis.
# We'll keep all the observations (and ignore the missing values) in the second part of our analysis.
# the starttime and stoptime columns are treated as characters so we can't detect any potential missing values. We'll convert them.
# 3- Convert & combine/split values
# a- split date and time in the starttime and endtime columns
df = separate(rawdf, starttime, into=c("startday","starttime"), sep=" ")
df = separate(df, stoptime, into=c("stopday","stoptime"), sep=" ")
# b- convert dates to proper format
df$startday = as.Date(df$startday, format = '%m/%d/%Y')
df$stopday = as.Date(df$stopday, format = '%m/%d/%Y')
# c- check for missing values in the time and date columns
summary(df)
# there is no unusual dates.
# e- extract month and day from dates (month and day are similar for start and stop date so only grabbing the values from startday)
df$month = as.numeric(format(df$startday, format = "%m"))
df$day = as.numeric(format(df$startday, format = "%d"))
df$monthname = month.abb[df$month]
df$dayofweek = weekdays(as.Date(df$startday))
df = as.data.frame(df)
names(df)[names(df)=="start station id"] = "start.station.id"
names(df)[names(df)=="start station name"] = "start.station.name"
names(df)[names(df)=="start station latitude"] = "start.station.latitude"
names(df)[names(df)=="start station longitude"] = "start.station.longitude"
names(df)[names(df)=="end station id"] = "end.station.id"
names(df)[names(df)=="end station name"] = "end.station.name"
names(df)[names(df)=="end station latitude"] = "end.station.latitude"
names(df)[names(df)=="end station longitude"] = "end.station.longitude"
names(df)[names(df)=="birth year"] = "birth.year"
# f- convert start and stop times to proper format and group by intervals of 15 mins
df$starttime = as.POSIXlt(round(as.double(strptime(df$starttime, '%H:%M:%S'))/(15*60))*(15*60),origin=(as.POSIXlt('1970-01-01')))
df$starttime = format(df$starttime,"%H:%M")
df$stoptime = as.POSIXlt(round(as.double(strptime(df$stoptime, '%H:%M:%S'))/(15*60))*(15*60),origin=(as.POSIXlt('1970-01-01')))
df$stoptime = format(df$stoptime,"%H:%M")
# add a column where we group the start and stop time by hour
tStart = strptime(paste("2001-01-01", df$starttime), format="%Y-%m-%d %H:%M")
df$starthour = format(round(tStart, units="hours"), format="%H:%M")
tStop = strptime(paste("2001-01-01", df$stoptime), format="%Y-%m-%d %H:%M")
df$stophour = format(round(tStop, units="hours"), format="%H:%M")
# g- convert the time duration to minutes (instead of seconds) to make it more user friendly.
df$tripduration.min = round(as.numeric(df$tripduration)/60)
# h- add a column with time duration grouped by chunks of 10 min.
df$tripduration.mingroup = 10*floor((df$tripduration.min + 9)/10)
# i- convert the gender values to gender names (i.e. 1 = male, 2 = female)
df$gender = ifelse(df$gender %in% '0', NA, ifelse(df$gender %in% '1', 'male','female'))
# j- convert the birth.year to age
df$age = as.integer(format(Sys.Date(), "%Y")) - as.integer(df$birth.year)
# k- create age groups
df$agegroup = cut(df$age,
breaks = c(17, 25, 35, 45, 55, 65, 75, Inf),
labels = c("17-24", "25-34", "35-44", "45-54", "55-64", "65-74", "75 or older"),
right = FALSE)
# l- create group for start and stop hour
df$starthour = strtrim(df$starthour, 2)
df$starthour = as.numeric(df$starthour)
df$startrange = cut(df$starthour,
breaks = c(00, 04, 08, 12, 16, 20, 24),
labels = c("before 4am", "4am-8am", "8am-12pm", "12pm-4pm", "4pm-8pm", "after 8pm"),
right = FALSE)
df$stophour = strtrim(df$stophour, 2)
df$stophour = as.numeric(df$stophour)
df$stoprange = cut(df$stophour,
breaks = c(00, 04, 08, 12, 16, 20, 24),
labels = c("before 4am", "4am-8am", "8am-12pm", "12pm-4pm", "4pm-8pm", "after 8pm"),
right = FALSE)
# m - convert latitude and longitude to numeric
df$start.station.longitude = as.numeric(df$start.station.longitude)
df$end.station.longitude = as.numeric(df$end.station.longitude)
df$start.station.latitude = as.numeric(df$start.station.latitude)
df$end.station.latitude = as.numeric(df$end.station.latitude)
shiny::runApp()
?ggmap
test_df = df %>% select(agegroup,
start.station.latitude, start.station.longitude)
direction_df$start.lat_long = apply( direction_df[ , c('start.station.latitude', 'start.station.longitude') ] , 1 , paste , collapse = ", " )
direction_df$end.lat_long = apply( direction_df[ , c('end.station.latitude', 'end.station.longitude') ] , 1 , paste , collapse = ", " )
test_df = df %>% select(agegroup,
start.station.latitude, start.station.longitude)
test_df$start.lat_long = apply( test_df[ , c('start.station.latitude', 'start.station.longitude') ] , 1 , paste , collapse = ", " )
unique(test_df)
test_df = test_df[sample(nrow(test_df),replace=F,size=0.1*nrow(melt_df)),]
ggmap(get_map("New York, New York",zoom=12,color = "bw")) + geom_point(data=test_df, aes(x=longitude,y=latitude), color='red')
test_df = df %>% select(agegroup,start.station.latitude, start.station.longitude)
test_df = test_df[sample(nrow(test_df),replace=F,size=0.1*nrow(melt_df)),]
ggmap(get_map("New York, New York",zoom=12,color = "bw")) + geom_point(data=test_df, aes(x=start.station.longitude,y=start.station.latitude), color='red')
ggmap(get_map("New York, New York")) + geom_point(data=test_df, aes(x=start.station.longitude,y=start.station.latitude))
devtools::install_github("hadley/ggplot2@v2.2.0")
ggmap(get_map("New York, New York")) + geom_point(data=test_df, aes(x=start.station.longitude,y=start.station.latitude))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.05*nrow(melt_df)),]
test_df = test_df[sample(nrow(test_df),replace=F,size=0.05*nrow(test_df)),]
ggmap(get_map("New York, New York")) + geom_point(data=test_df, aes(x=start.station.longitude,y=start.station.latitude))
head(test_df)
ggmap(get_map("New York, New York")) + geom_point(data=test_df, aes(x=start.station.latitude,y=start.station.longitude))
ggmap::get_map("New York City", zoom = 14)
ggmap(get_map("New York City", zoom = 14))
ggmap(ggmap::get_map("New York City", zoom = 14))
ggmap(ggmap::get_map("New York City", zoom = 14))
ggmap(ggmap::get_map("New York City", zoom = 14))
library(ggplot2)
ggmap(ggmap::get_map("New York City", zoom = 14))
runApp()
shiny::runApp()
devtools::install_github('ropensci/plotly)
devtools::install_github('ropensci/plotly')
runApp()
install.packages(ggplot2)
install.packages('ggplot2')
install.packages('ggplot2')
shiny::runApp()
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=longitude, y=latitude), color="red", size=20, alpha=0.5)
test_df = df %>% select(agegroup, start.station.name, end.station.name)
test_df
test_df = test_df[sample(nrow(test_df),replace=F,size=0.1*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=longitude, y=latitude), color="red", size=20, alpha=0.5)
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.name.longitude, y=start.name.latitude), color="red", size=20, alpha=0.5)
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude), color="red", size=20, alpha=0.5)
test_df = df %>% select(agegroup, start.station.latitude, end.station.longitude)
test_df = test_df[sample(nrow(test_df),replace=F,size=0.1*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude), color="red", size=20, alpha=0.5)
test_df
test_df = df %>% select(agegroup, start.station.latitude, start.station.longitude)
test_df = test_df[sample(nrow(test_df),replace=F,size=0.01*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude), color="red", size=20, alpha=0.5)
test_df = df %>% select(agegroup, start.station.latitude, start.station.longitude)
test_df = test_df[sample(nrow(test_df),replace=F,size=0.001*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude), color="red", size=1, alpha=0.5)
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.1*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude), color="red", size=20, alpha=0.5)
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude), color="red", size=5, alpha=0.5)
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, colour = age), color="red", size=5, alpha=0.5)
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, colour = age), size=5, alpha=0.5)
test_df
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
head(test_df)
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (c(start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (c(start.station.latitude, start.station.longitude)) %>% summarize(median = median(age))
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, colour = age), size=5, alpha=0.5)
head(test_df)
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (c(start.station.latitude, start.station.longitude)) %>% summarize(median = median(age))
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude), color="red", size=20, alpha=0.5)
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=5, alpha=0.5)
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=5, alpha=0.5) +
scale_fill_gradientn(colours=c("yellow","blue")
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=5, alpha=0.5)
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=5, alpha=0.5) +
scale_fill_brewer(palette = "PRGn")
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=5, alpha=0.5) +
scale_fill_gradient2(low="darkblue", high="darkgreen", guide="colorbar")
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=5, alpha=0.5) +
scale_color_gradient2(low="darkblue", high="darkgreen", guide="colorbar")
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=5, alpha=0.5) +
scale_colour_gradient(low = "white", high = "black")
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=5, alpha=0.5) +
scale_colour_gradient2()
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=5)
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=10)
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=6)
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=6)
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=6) + scale_colour_gradient2()
?scale_colour_gradient
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=6) + scale_color_gradient(low = "#deebf7", high = "#3182bd", name = "Median Age")
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=6) + scale_color_gradient(low = "#deebf7", high = "#133145", name = "")
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=6) + scale_color_gradient(low = "#b7d7eb", high = "#133145", name = "")
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=6) + labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()scale_color_gradient(low = "#b7d7eb", high = "#133145", name = "")
test_df = df %>% select(age, start.station.latitude, start.station.longitude) %>% group_by (start.station.latitude, start.station.longitude) %>% summarize(median = median(age))
test_df = test_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) + geom_point(data=test_df, aes(x=start.station.longitude, y=start.station.latitude, color = median), size=6) + labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank() + scale_color_gradient(low = "#b7d7eb", high = "#133145", name = "")
medianage_df = df %>%
select(age, start.station.latitude, start.station.longitude) %>%
group_by (start.station.latitude, start.station.longitude) %>%
summarize(median = median(age))
medianage_df = median_df[sample(nrow(test_df),replace=F,size=0.5*nrow(test_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#b7d7eb", high = "#133145", name = "")
medianage_df = df %>%
select(age, start.station.latitude, start.station.longitude) %>%
group_by (start.station.latitude, start.station.longitude) %>%
summarize(median = median(age))
medianage_df = medianage_df[sample(nrow(medianage_df),replace=F,size=0.5*nrow(medianage_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#b7d7eb", high = "#133145", name = "")
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#b7d7eb", high = "#133145", name = “”)
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#b7d7eb", high = "#133145", name = “”)
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#b7d7eb", high = "#133145", name = “”)
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#b7d7eb", high = "#133145")
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(llow = "#deebf7", high = "#3182bd")
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#deebf7", high = "#3182bd")
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#deebf7", high = "#133145")
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#b7d7eb", high = "#133145")
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#b7d7eb", high = "#133145")
runApp()
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#b7d7eb", high = "#133145") +
theme_map()
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#b7d7eb", high = "#133145") +
theme_map()
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#b7d7eb", high = "#133145")
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
theme_map() +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#b7d7eb", high = "#133145") +
theme_map()
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=start.station.longitude,
y=start.station.latitude,
color = median), size=6, alpha=0.8) +
theme_map() +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#b7d7eb", high = "#133145")
runApp()
runApp()
runApp()
