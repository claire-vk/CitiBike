'--with-proj-include=/Library/Frameworks/PROJ.framework/Headers',
'--with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib'))
install.packages('rgeos', type = "source", configure.args=c(
'--with-gdal-config=/Library/Frameworks/GDAL.framework/Programs/gdal-config',
'--with-proj-include=/Library/Frameworks/PROJ.framework/Headers',
'--with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib'))
install.packages('maptools', dependencies=TRUE)
install.packages('rgdal', type = "source", configure.args=c('--with-proj-include=/Library/Frameworks/PROJ.framework/Headers', '--with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib'))
library(ggmap)
get_map(location = "New York", maptype = "roadmap")
ggmap(mymap)
ggmap(get_map(location = "New York", maptype = "roadmap"))
install.packages('ggmap')
install.packages('ggmap')
library(ggmap)
ggmap(get_map(location = "New York", maptype = "roadmap"))
ggmap(get_map("New York, New York",zoom=12,color = "bw")) + geom_point(data=data, aes(x=longitude,y=latitude), color='red')
devtools::install_github("dkahle/ggmap")
devtools::install_github("hadley/ggplot2")
ggmap(get_map("New York, New York",zoom=12,color = "bw")) + geom_point(data=data, aes(x=longitude,y=latitude), color='red')
ggmap(get_map("New York, New York",zoom=12,color = "bw")) + geom_point(data=df, aes(x=longitude,y=latitude), color='red')
lat_long = dir_df$start.lat_ling
shiny::runApp('DataScience/NYC_DSA/project1_citibike')
install.packages('shiny')
library(reshape2)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(ggthemes)
library(leaflet)
library(shiny)
library(googleVis)
library(data.table)
library(scales)
library(plotly)
library(ggmap)
library(shinydashboard)
library(googleway)
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
devtools::install_github('ropensci/plotly)
devtools::install_github('ropensci/plotly)
devtools::install_github('ropensci/plotly)
runApp('DataScience/NYC_DSA/project1_citibike')
devtools::install_github('ropensci/plotly')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
shiny::runApp('DataScience/NYC_DSA/project1_citibike')
medianage_df = df %>%
select(age, end.station.latitude, end.station.longitude) %>%
group_by (end.station.latitude, end.station.longitude) %>%
summarize(median = median(age))
# medianage_df = medianage_df[sample(nrow(medianage_df),replace=F,size=0.5*nrow(medianage_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=end.station.longitude,
y=end.station.latitude,
color = median), size=8, alpha=0.8) +
theme_map() +
labs(x = "", y = "", title = 'Median Age per Area') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#ffffff", high = "#133145")
runApp('DataScience/NYC_DSA/project1_citibike')
head(df)
test = df %>%
select(start.station.name, end.station.name) %>%
top_n(25)
rt <- Vectorize(route,vectorize.args=c("from","to"),SIMPLIFY=FALSE)
rt(df$start.station.name, df$end.station.name)
leg <-function(start, dest, n){
r<- route(from=start,to=dest,mode = c("bicycling"),structure = c("route"))
c<- geom_path(aes(x = lon, y = lat),
alpha = 2/4, size = as.numeric(n)/500, data = r, colour = 'blue')
Sys.sleep(runif(1, 3.0, 7.5))
return (c)
}
a <- qmap('New York', zoom = 12, maptype = 'road', color="bw")
for (n in 101:200){
l<-leg(as.character(dir_df[n,1]), as.character(dir_df[n,2]),as.character(dir_df[n,3]))
a<-a+l
}
test = df %>%
select(start.station.name, end.station.name) %>%
top_n(25)
rt <- Vectorize(route,vectorize.args=c("from","to"),SIMPLIFY=FALSE)
rt(df$start.station.name, df$end.station.name)
head(ddf)
head(df)
class(df$end.station.latitude)
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill') +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
theme_pander() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill') +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
theme_pander() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4)) +scale_color_gradient(low = "#ffffff", high = "#133145")
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill') +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
scale_color_gradient(low = "#ffffff", high = "#133145")+
theme_pander() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill') +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
scale_fill_gradient(low = "#ffffff", high = "#133145")+
theme_pander() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill', color=c('red','blue','orange','green','yellow', 'purple')) +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
theme_pander() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill', color="red") +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
theme_pander() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill', fill=c('red','blue','orange','green','yellow', 'purple')) +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
theme_pander() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill', fill=c('blue')) +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
theme_pander() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill') +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
theme_fivethirtyeight() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill') +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
scale_fill_ptol() +
theme_pander() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill') +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
scale_fill_pander() +
theme_pander() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill') +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
scale_fill_hc() +
theme_pander() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill') +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
scale_fill_wsj() +
theme_pander() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill') +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
scale_fill_economist() +
theme_pander() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill') +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
scale_fill_fivethirtyeight() +
theme_pander() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
weekdays_agegroup = df %>%
filter(!dayofweek %in% c('Saturday', 'Sunday')) %>%
group_by(starthour, agegroup) %>%
summarise(count = n())
ggplot(data = weekdays_agegroup, aes(x=starthour, y = count, fill = agegroup)) +
geom_histogram(stat = 'identity', position = 'fill') +
labs(x = "", y = "", title = '# of Riders per Hour of the Day (Weekends)') +
scale_fill_economist() +
theme_fivethirtyeight() +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_x_continuous(breaks = seq(min(weekdays_agegroup$starthour),
max(weekdays_agegroup$starthour), by = 4))
runApp('DataScience/NYC_DSA/project1_citibike')
max(weekdays_agegroup$starthour), by = 4))
medianage_df = df %>%
select(age, end.station.latitude, end.station.longitude) %>%
group_by (end.station.latitude, end.station.longitude) %>%
summarize(median = median(age))
# medianage_df = medianage_df[sample(nrow(medianage_df),replace=F,size=0.5*nrow(medianage_df)),]
ggmap(ggmap::get_map("New York City", zoom = 14)) +
geom_point(data=medianage_df, aes(x=end.station.longitude,
y=end.station.latitude,
color = median), size=8, alpha=0.8) +
theme_map() +
labs(x = "", y = "", title = 'Median Age per Arrival Station') +
theme(axis.line=element_blank(),
axis.ticks=element_blank(),
plot.title = element_text(size = 22,
face = 'bold',
color = 'grey28',
margin = margin(10,0,10,0),
family = 'Helvetica',
hjust = 0.025),
legend.title = element_blank(),
strip.text.x = element_blank()) +
scale_color_gradient(low = "#ffffff", high = "#133145")
runApp('DataScience/NYC_DSA/project1_citibike')
runApp('DataScience/NYC_DSA/project1_citibike')
shiny::runApp()
runApp()
runApp()
rsconnect::showLogs()
install.packages('dtplyr')
library(dtplyr)
runApp()
runApp()
runApp()
runApp('~/DataScience/NYC_DSA/project1_citibike_lowres')
runApp('~/DataScience/NYC_DSA/project1_citibike_lowres')
runApp('~/DataScience/NYC_DSA/project1_citibike_lowres')
runApp('~/DataScience/NYC_DSA/project1_citibike_lowres')
runApp('~/DataScience/NYC_DSA/project1_citibike_lowres')
runApp('~/DataScience/NYC_DSA/project1_citibike_lowres')
runApp('~/DataScience/NYC_DSA/project1_citibike_lowres')
runApp('~/DataScience/NYC_DSA/project1_citibike_lowres')
runApp('~/DataScience/NYC_DSA/project1_citibike_lowres')
runApp('~/DataScience/NYC_DSA/project1_citibike_lowres')
runApp()
runApp('~/DataScience/NYC_DSA/project1_citibike_lowres')
runApp('~/DataScience/NYC_DSA/project1_citibike_lowres')
runApp()
runApp('~/DataScience/NYC_DSA/project1_citibike_lowres')
install.packages('rgdal', type="source")
version
if(!require(installr)) {
install.packages("installr"); require(installr)}
updateR()
if(!require(installr)) {
install.packages("installr"); require(installr)}
updateR()
install.packages('devtools') #assuming it is not already installed
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR(admin_password = 'Admin user password')
updateR(admin_password = '!LOvecro28wf')
install.packages("installr")
library(installr)
updateR()
